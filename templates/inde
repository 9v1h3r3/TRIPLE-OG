<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Messenger Bot Dashboard</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@3.3.2/dist/tailwind.min.css" rel="stylesheet">
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap');
  body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #a78bfa, #f472b6, #60a5fa);
    background-size: 300% 300%;
    animation: gradientMove 10s infinite alternate ease-in-out;
    color: #111827;
  }
  @keyframes gradientMove {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
  }

  .card {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 1.2rem;
    padding: 2rem;
    backdrop-filter: blur(15px);
    box-shadow: 0 8px 30px rgba(0,0,0,0.15);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .card:hover { transform: translateY(-5px); box-shadow: 0 15px 40px rgba(0,0,0,0.25); }

  input, textarea {
    background: rgba(255,255,255,0.9);
    border-radius: 0.75rem;
    border: 2px solid transparent;
    font-size: 1rem;
    padding: 0.8rem 1rem;
    width: 90%;
    transition: 0.3s;
  }
  input:focus, textarea:focus {
    outline: none;
    border-color: #6366f1;
    box-shadow: 0 0 10px rgba(99,102,241,0.3);
  }

  .btn {
    background: linear-gradient(90deg, #6366f1, #ec4899);
    color: white;
    font-weight: 600;
    border-radius: 0.75rem;
    padding: 0.8rem 1rem;
    width: 100%;
    transition: all 0.3s;
  }
  .btn:hover { transform: scale(1.05); box-shadow: 0 0 15px rgba(99,102,241,0.4); }
  .btn-stop { background: linear-gradient(90deg, #ef4444, #f97316); }

  .target-card {
    background: rgba(255,255,255,0.9);
    border-radius: 0.75rem;
    padding: 1rem;
    margin-bottom: 0.75rem;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
  }

  #logBox {
    height: 320px;
    overflow-y: auto;
    font-family: monospace;
    background: rgba(255,255,255,0.9);
    border-radius: 0.75rem;
    padding: 1rem;
    border: 2px solid rgba(0,0,0,0.05);
  }

  .progress-bar {
    height: 8px;
    background: linear-gradient(90deg, #6366f1, #ec4899);
    border-radius: 999px;
    transition: width 0.3s ease-in-out;
  }

  .fade-in { animation: fadeIn 0.5s ease forwards; opacity: 0; }
  @keyframes fadeIn { from {opacity:0; transform: translateY(10px);} to {opacity:1; transform: translateY(0);} }

</style>
</head>
<body class="min-h-screen p-6 flex flex-col gap-6">

  <header class="text-center mb-4">
    <h1 class="text-4xl font-bold text-white drop-shadow-lg">‚ú® Messenger Bot Dashboard</h1>
    <p class="text-white/80 mt-2 text-lg">Control. Monitor. Automate.</p>
  </header>

  <main class="grid grid-cols-1 md:grid-cols-2 gap-6">

    <!-- Control Panel -->
    <div class="card fade-in">
      <h2 class="text-2xl font-semibold mb-4 text-gray-800">‚öôÔ∏è Bot Controls</h2>
      <form id="botForm" class="space-y-4">
        <div>
          <label class="font-semibold">Cookie JSON</label>
          <textarea name="cookie" rows="5" placeholder='[{"name": "c_user", "value": "..."}]' required></textarea>
        </div>

        <div>
          <label class="font-semibold">Prefix</label>
          <input type="text" name="prefix" placeholder="[BOT]" required>
        </div>

        <div>
          <label class="font-semibold">Message File</label>
          <input type="file" name="messages" accept=".txt" required>
        </div>

        <div id="targetsContainer" class="space-y-3">
          <label class="font-semibold">üéØ Target Thread IDs</label>
          <div class="target-card flex items-center gap-2">
            <input type="text" name="targets" placeholder="Enter thread ID...">
            <button type="button" class="btn add-target w-20">Ôºã</button>
          </div>
        </div>

        <div class="flex gap-4 pt-3">
          <button type="submit" class="btn">üöÄ Start Bot</button>
          <button type="button" id="stopBtn" class="btn btn-stop">üõë Stop Bot</button>
        </div>
      </form>
    </div>

    <!-- Logs & Status -->
    <div class="card fade-in">
      <h2 class="text-2xl font-semibold mb-3 text-gray-800">üì° Live Logs & Progress</h2>
      <div id="targetsStatus" class="mb-4 space-y-2"></div>
      <div id="logBox"></div>
    </div>

  </main>

<script>
const socket = io();
const logBox = document.getElementById("logBox");
const targetsContainer = document.getElementById("targetsContainer");
const targetsStatus = document.getElementById("targetsStatus");

socket.on("log_update", msg => {
  const div = document.createElement("div");
  div.textContent = msg;
  div.className = "fade-in";
  logBox.appendChild(div);
  logBox.scrollTop = logBox.scrollHeight;
});

targetsContainer.addEventListener("click", e => {
  if (e.target.classList.contains("add-target")) {
    const block = document.createElement("div");
    block.className = "target-card flex items-center gap-2 fade-in";
    block.innerHTML = `
      <input type="text" name="targets" placeholder="Enter thread ID...">
      <button type="button" class="btn bg-red-500 remove-target w-20">‚àí</button>
    `;
    targetsContainer.appendChild(block);
  } else if (e.target.classList.contains("remove-target")) {
    e.target.parentElement.remove();
  }
});

document.getElementById("botForm").addEventListener("submit", async e => {
  e.preventDefault();
  const form = e.target;
  const formData = new FormData(form);
  const targets = [...document.querySelectorAll("input[name='targets']")]
    .map(i => i.value.trim())
    .filter(v => v)
    .join("\n");
  formData.set("targets", targets);
  try {
    const res = await axios.post("/start", formData);
    addLog(`üöÄ ${res.data}`);
  } catch (err) {
    addLog(`‚ùå ${err.response?.data || err.message}`, true);
  }
});

document.getElementById("stopBtn").addEventListener("click", async () => {
  try {
    const res = await axios.post("/stop");
    addLog(`üõë ${res.data}`);
  } catch (err) {
    addLog(`‚ùå ${err.message}`, true);
  }
});

function addLog(msg, isError=false) {
  const div = document.createElement("div");
  div.textContent = msg;
  div.className = "fade-in";
  if(isError) div.style.color = "#ef4444";
  logBox.appendChild(div);
  logBox.scrollTop = logBox.scrollHeight;
}

// Mock target progress UI (ready for integration)
function showTargetProgress(targetId, percent) {
  let row = document.getElementById("tgt-" + targetId);
  if(!row) {
    row = document.createElement("div");
    row.id = "tgt-" + targetId;
    row.innerHTML = `
      <div class="font-semibold">${targetId}</div>
      <div class="w-full bg-gray-200 rounded-full mt-1">
        <div class="progress-bar" style="width: ${percent}%;"></div>
      </div>
    `;
    targetsStatus.appendChild(row);
  } else {
    row.querySelector(".progress-bar").style.width = percent + "%";
  }
}
</script>

</body>
</html>
