# -*- coding: utf-8 -*-
import time
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
import os

class E2EEMessenger:
    def __init__(self):
        self.driver = None
        self.config = self.load_config()
    
    def load_config(self):
        """‡§∏‡§≠‡•Ä ‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§∏‡•á ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç"""
        config = {
            "thread_id": self.read_file("tid.txt", "100000000000000"),
            "delay_time": self.read_file("time.txt", "2"),
            "cookie_file": "cookies.txt",
            "prefix_file": "prefix.txt",
            "messages_file": "messages.txt"
        }
        return config
    
    def read_file(self, filename, default=""):
        """‡§´‡§æ‡§á‡§≤ ‡§∏‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§¢‡§º‡•á‡§Ç"""
        try:
            with open(filename, 'r', encoding='utf-8') as f:
                return f.read().strip()
        except:
            return default
    
    def setup_browser_e2ee(self):
        """E2EE ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§∏‡•á‡§ü‡§Ö‡§™"""
        print("üîí E2EE ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§∏‡•á‡§ü‡§Ö‡§™...")
        options = Options()
        options.add_argument("--disable-blink-features=AutomationControlled")
        options.add_experimental_option("excludeSwitches", ["enable-automation"])
        options.add_argument("--user-data-dir=./chrome_data")
        self.driver = webdriver.Chrome(options=options)
    
    def load_cookies_e2ee(self):
        """cookies.txt ‡§∏‡•á E2EE ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç"""
        try:
            print("üç™ E2EE ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç...")
            self.driver.get("https://facebook.com")
            time.sleep(2)
            
            cookies_loaded = False
            with open(self.config['cookie_file'], 'r') as f:
                for line in f:
                    if not line.startswith('#') and line.strip():
                        parts = line.strip().split('\t')
                        if len(parts) >= 7:
                            cookie = {
                                'domain': parts[0],
                                'name': parts[5],
                                'value': parts[6],
                                'path': parts[2],
                                'secure': parts[3].lower() == 'true'
                            }
                            try:
                                self.driver.add_cookie(cookie)
                                cookies_loaded = True
                            except:
                                continue
            
            if cookies_loaded:
                print("‚úÖ E2EE ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§≤‡•ã‡§° ‡§π‡•ã ‡§ó‡§à‡§Ç")
                return True
            else:
                print("‚ùå ‡§ï‡•ã‡§à ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä‡§Ç")
                return False
                
        except Exception as e:
            print(f"‚ùå ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§è‡§∞‡§∞: {e}")
            return False
    
    def load_prefix(self):
        """prefix.txt ‡§∏‡•á ‡§™‡•ç‡§∞‡•Ä‡§´‡§ø‡§ï‡•ç‡§∏ ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç"""
        return self.read_file("prefix.txt", "ü§ñ ")
    
    def load_messages(self):
        """messages.txt ‡§∏‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç"""
        try:
            with open(self.config['messages_file'], 'r', encoding='utf-8') as f:
                messages = [line.strip() for line in f if line.strip()]
            return messages if messages else ["Hello from E2EE Bot!"]
        except:
            return ["Hello from E2EE Bot!"]
    
    def get_delay_time(self):
        """time.txt ‡§∏‡•á ‡§°‡§ø‡§≤‡•á ‡§ü‡§æ‡§á‡§Æ ‡§™‡§¢‡§º‡•á‡§Ç"""
        try:
            delay = float(self.config['delay_time'])
            return max(1, delay)  # ‡§ï‡§Æ ‡§∏‡•á ‡§ï‡§Æ 1 ‡§∏‡•á‡§ï‡§Ç‡§°
        except:
            return 2  # ‡§°‡§ø‡§´‡•â‡§≤‡•ç‡§ü 2 ‡§∏‡•á‡§ï‡§Ç‡§°
    
    def send_e2ee_message(self, message):
        """E2EE ‡§ö‡•à‡§ü ‡§Æ‡•á‡§Ç ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡•á‡§Ç"""
        try:
            # E2EE ‡§•‡•ç‡§∞‡•á‡§° URL
            thread_url = f"https://www.facebook.com/messages/e2ee/t/{self.config['thread_id']}"
            self.driver.get(thread_url)
            time.sleep(3)
            
            # E2EE ‡§Æ‡•à‡§∏‡•á‡§ú ‡§¨‡•â‡§ï‡•ç‡§∏ ‡§¢‡•Ç‡§Ç‡§¢‡•á‡§Ç
            message_box = self.driver.find_element(By.CSS_SELECTOR, "div[role='textbox'], div[contenteditable='true']")
            message_box.clear()
            message_box.send_keys(message)
            
            # E2EE ‡§∏‡•á‡§Ç‡§° ‡§¨‡§ü‡§®
            send_btn = self.driver.find_element(By.CSS_SELECTOR, "div[aria-label='Send'][role='button']")
            send_btn.click()
            
            print(f"üîí E2EE ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡§æ: {message}")
            return True
            
        except Exception as e:
            print(f"‚ùå E2EE ‡§Æ‡•à‡§∏‡•á‡§ú ‡§è‡§∞‡§∞: {e}")
            return False
    
    def start_e2ee_messaging(self):
        """E2EE ‡§ë‡§ü‡•ã ‡§Æ‡•à‡§∏‡•á‡§ú‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç"""
        print("üöÄ E2EE ‡§Æ‡•à‡§∏‡•á‡§ú‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à...")
        
        # ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§∏‡•á‡§ü‡§Ö‡§™
        self.setup_browser_e2ee()
        
        # ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
        if not self.load_cookies_e2ee():
            print("‚ùå ‡§ï‡•Å‡§ï‡•Ä‡§ú ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§™‡§æ‡§à‡§Ç, ‡§Æ‡•à‡§®‡•ç‡§Ø‡•Å‡§Ö‡§≤ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ö‡§æ‡§π‡§ø‡§è")
            input("üëâ ‡§Æ‡•à‡§®‡•ç‡§Ø‡•Å‡§Ö‡§≤ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ENTER ‡§¶‡§¨‡§æ‡§è‡§Ç...")
        
        # ‡§°‡•á‡§ü‡§æ ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
        prefix = self.load_prefix()
        messages = self.load_messages()
        delay_time = self.get_delay_time()
        
        print(f"""
üîç ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂:
üì± Thread ID: {self.config['thread_id']}
‚è∞ Delay Time: {delay_time} ‡§∏‡•á‡§ï‡§Ç‡§°
üì® Messages: {len(messages)}
üî§ Prefix: {prefix}
üîí Mode: E2EE Encrypted
        """)
        
        input("üëâ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ENTER ‡§¶‡§¨‡§æ‡§è‡§Ç...")
        
        message_count = 0
        
        try:
            while True:  # ‡§Ö‡§®‡§Ç‡§§ ‡§≤‡•Ç‡§™ - CTRL+C ‡§∏‡•á ‡§∞‡•ã‡§ï‡•á‡§Ç
                for msg in messages:
                    # ‡§™‡•ç‡§∞‡•Ä‡§´‡§ø‡§ï‡•ç‡§∏ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
                    full_message = f"{prefix}{msg}".strip()
                    
                    # E2EE ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡•á‡§Ç
                    if self.send_e2ee_message(full_message):
                        message_count += 1
                        
                        # ‡§°‡§ø‡§≤‡•á
                        print(f"‚è≥ ‡§Ö‡§ó‡§≤‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú {delay_time} ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç...")
                        time.sleep(delay_time)
        
        except KeyboardInterrupt:
            print(f"\nüõë ‡§∞‡•ã‡§ï‡§æ ‡§ó‡§Ø‡§æ! ‡§ï‡•Å‡§≤ {message_count} E2EE ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡•á ‡§ó‡§è")
        
        finally:
            if self.driver:
                self.driver.quit()

# ‡§Æ‡•á‡§® ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ
if __name__ == "__main__":
    print("=" * 60)
    print("üîí FACEBOOK E2EE AUTO MESSENGER")
    print("üìÅ External Files: tid.txt, time.txt, cookies.txt")
    print("=" * 60)
    
    # ‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á‡§Ç
    required_files = ["tid.txt", "time.txt", "cookies.txt"]
    missing_files = [f for f in required_files if not os.path.exists(f)]
    
    if missing_files:
        print(f"‚ùå ‡§Ø‡•á ‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä‡§Ç: {', '.join(missing_files)}")
        print("üìù setup_e2ee.py ‡§ö‡§≤‡§æ‡§ï‡§∞ ‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§¨‡§®‡§æ‡§è‡§Ç")
    else:
        # ‡§¨‡•â‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
        bot = E2EEMessenger()
        bot.start_e2ee_messaging()
